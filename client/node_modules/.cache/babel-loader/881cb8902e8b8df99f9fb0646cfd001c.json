{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitHub\\\\Personal Projects\\\\TypeOut\\\\client\\\\src\\\\components\\\\Connect.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Container, Input, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connect = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"connectOuterContainer\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"connectInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"connectHeader\",\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"heading\",\n        children: \"Connect to a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"connectInput\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 5\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"insert username\",\n          className: \"connectInput\",\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"connectInput\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 5\n          },\n          children: \"Room Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"insert room code\",\n          className: \"chatInput\",\n          type: \"text\",\n          value: room,\n          onChange: event => setRoom(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: event => !username || !room ? event.preventDefault() : null,\n        to: {\n          pathname: \"/chat\",\n          state: {\n            username,\n            room\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submitButton\",\n          sx: {\n            mt: 5,\n            mb: 5\n          },\n          color: \"success\",\n          variant: \"contained\",\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Connect, \"5YeinykN5uUsuHJg7dEPXH2qfJI=\");\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["F:/GitHub/Personal Projects/TypeOut/client/src/components/Connect.js"],"names":["Box","Button","Container","Input","Typography","React","useState","Link","Connect","username","setUsername","room","setRoom","mt","event","target","value","preventDefault","pathname","state","mb"],"mappings":"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","sourcesContent":["import { Box, Button, Container, Input, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Connect = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [room, setRoom] = useState('');\r\n\r\n    return (\r\n        <Box className=\"connectOuterContainer\">\r\n            <Box className=\"connectInnerContainer\">\r\n                <Container className=\"connectHeader\">\r\n                    text\r\n                </Container>\r\n                <Typography variant=\"h4\" className=\"heading\">Connect to a Room</Typography>\r\n                <Box className=\"connectInput\">\r\n                    <Typography variant=\"h6\" sx={{ mt: 5 }}>Username</Typography>\r\n                    <Input placeholder=\"insert username\" className=\"connectInput\" type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n                </Box>\r\n                <Box className=\"connectInput\">\r\n                    <Typography variant=\"h6\" sx={{ mt: 5 }}>Room Code</Typography>\r\n                    <Input placeholder=\"insert room code\" className=\"chatInput\" type=\"text\" value={room} onChange={(event) => setRoom(event.target.value)} />\r\n                </Box>\r\n                <Link onClick={event => (!username || !room) ? event.preventDefault() : null} to={{ pathname: \"/chat\", state: { username, room } }}>\r\n                    <Button className=\"submitButton\" sx={{ mt: 5, mb: 5 }} color=\"success\" variant=\"contained\">Join Room</Button>\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Connect;"]},"metadata":{},"sourceType":"module"}