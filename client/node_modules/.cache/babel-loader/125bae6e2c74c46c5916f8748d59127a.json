{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitHub\\\\Personal Projects\\\\TypeOut\\\\client\\\\src\\\\components\\\\Connect.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Input, Typography } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet theme = createTheme();\ntheme = createTheme(theme, {\n  typography: {\n    h6: {\n      color: 'white'\n    }\n  }\n});\n\nconst Connect = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"connectOuterContainer\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"connectInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"heading\",\n        children: \"Connect to a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"connectInput\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 5\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\",\n          className: \"connectInput\",\n          type: \"text\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"connectInput\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 5\n          },\n          children: \"Room Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\",\n          className: \"chatInput\",\n          type: \"text\",\n          value: room,\n          onChange: event => setRoom(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: event => !username || !room ? event.preventDefault() : null,\n        to: {\n          pathname: \"/chat\",\n          state: {\n            username,\n            room\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submitButton\",\n          sx: {\n            mt: 5\n          },\n          color: \"success\",\n          variant: \"contained\",\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Connect, \"5YeinykN5uUsuHJg7dEPXH2qfJI=\");\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["F:/GitHub/Personal Projects/TypeOut/client/src/components/Connect.js"],"names":["Box","Button","Input","Typography","createTheme","React","useState","Link","theme","typography","h6","color","Connect","username","setUsername","room","setRoom","mt","event","target","value","preventDefault","pathname","state"],"mappings":"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","sourcesContent":["import { Box, Button, Input, Typography } from '@mui/material';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet theme = createTheme();\r\n\r\ntheme = createTheme(theme, {\r\n    typography: {\r\n        h6: {\r\n            color: 'white'\r\n        }\r\n    }\r\n});\r\n\r\nconst Connect = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [room, setRoom] = useState('');\r\n\r\n    return (\r\n        <Box className=\"connectOuterContainer\">\r\n            <Box className=\"connectInnerContainer\">\r\n                <Typography variant=\"h4\" className=\"heading\">Connect to a Room</Typography>\r\n                <Box className=\"connectInput\">\r\n                    <Typography variant=\"h6\" sx={{ mt: 5 }}>Username</Typography>\r\n                    <Input placeholder=\"\" className=\"connectInput\" type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n                </Box>\r\n                <Box className=\"connectInput\">\r\n                    <Typography variant=\"h6\" sx={{ mt: 5 }}>Room Code</Typography>\r\n                    <Input placeholder=\"\" className=\"chatInput\" type=\"text\" value={room} onChange={(event) => setRoom(event.target.value)} />\r\n                </Box>\r\n                <Link onClick={event => (!username || !room) ? event.preventDefault() : null} to={{ pathname: \"/chat\", state: { username, room } }}>\r\n                    <Button className=\"submitButton\" sx={{ mt: 5 }} color=\"success\" variant=\"contained\">Join Room</Button>\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Connect;"]},"metadata":{},"sourceType":"module"}